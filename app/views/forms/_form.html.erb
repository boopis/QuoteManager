<%= form_for @form, html: { class: "form-inline builder formbuilder" } do |f| %>
  <% if @form.errors.any? %>
    <div class="alert alert-block alert-danger fade in">
      <button type="button" class="close" data-dismiss="alert" aria-hidden="true">Ã—</button>
      <h4><%= pluralize(@form.errors.count, "error") %> prohibited this form from being saved:</h4>
      <ul>
      <% @form.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>    
    </div>
  <% end %>

  <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12 side pull-left">
    <div class="main-box">
      <h2>Contact Fields</h2>
      <div class="list-group">
        <%= link_to_add_contact_fields "Name", "name", "contact-name", "fa fa-user", f, :fields, @form %>
        <%= link_to_add_contact_fields "Phone", "phone", "contact-phone", "fa fa-phone", f, :fields, @form %>
        <%= link_to_add_contact_fields "Email", "email", "contact-email", "fa fa-envelope", f, :fields, @form %>
        <%= link_to_add_contact_fields "Title", "title", "contact-title", "fa fa-font", f, :fields, @form %>
        <%= link_to_add_contact_fields "Description", "description", "contact-description", "fa fa-info", f, :fields, @form %>
      </div>
      <h2>Custom Fields</h2>
      <div class="list-group">
        <%= link_to_add_fields "Text Field", "text", "fa fa-pencil", f, :fields %>
        <%= link_to_add_fields "File Field", "file", "fa fa-file-text", f, :fields %>
        <%= link_to_add_fields "In-page Field", "inpage", "fa fa-tag", f, :fields %>
        <%= link_to_add_fields "Paragraph", "paragraph", "fa fa-edit", f, :fields %>
        <%= link_to_add_fields "Radio", "radio", "fa fa-check-circle", f, :fields %>
        <%= link_to_add_fields "Select", "select", "fa fa-bars", f, :fields %>
        <%= link_to_add_fields "Check Box", "checkbox", "fa fa-check-square", f, :fields %>
        <%= link_to_add_fields "Header", "header", "fa fa-font", f, :fields %>
      </div>
    </div>
  </div>

  <div class="col-lg-8 col-md-8 col-sm-12 col-xs-12 main">

    <div class="main-box">
      <div class="tabs-wrapper">

        <ul class="nav nav-tabs">
          <li class="active"><a href="#rendered-form" data-toggle="tab">Form Render</a></li>
          <li class=""><a href="#user-guide" data-toggle="tab">Instructions</a></li>
          <li class=""><a href="#style" data-toggle="tab">Styles</a></li>
          <li class=""><a href="#js" data-toggle="tab">Javascripts</a></li>
          <li class=""><a href="#settings" data-toggle="tab">Settings</a></li>
        </ul>

        <div class="tab-content">
          <div class="tab-pane fade active in" id="rendered-form">
            <div class="added-fields">
              <div class="form-group">
              <%= f.label :name, "Form Name", class: "sr-only" %>
                <div class="input-group">
                  <span class="input-group-addon">
                    <i class="fa fa-file-o"></i>
                  </span>
                  <%= f.text_field :name, class: "form-control", placeholder: "Form Name" %>
                </div>
              </div>

              <div class='form-inner-modal'>
                <div class='form-header'>
                  <a id="modal_close" href="#" style="float: right;">x</a>
                  <%= content_tag :b, @form.name %>
                </div>
                <%= content_tag(:div, :class => 'form-field-list ' + 'column' + @form.column_style.to_s) do %>
                  <% if @form.fields? %>
                    <% @form.fields.each do |index, field| %>
                      <%= f.fields_for :fields, OpenStruct.new(field), index: index do |field_type| %>
                        <%= render field['type'], f: field_type, options: field['options'] || '[]', required: field['validate']['validates_presence_of'], id: index, field: field %>
                      <% end %>
                    <% end %>
                  <% end %>
                <% end %>
                <div class='action'>
                  <button class='demo btn btn-primary'>Submit</button>
                </div>
              </div>
            </div>
          </div>

          <div class="tab-pane fade" id="user-guide">
            <h2 class="pull-left">Guide</h2>
            <div class='clearfix'></div>
            <p>
              The formbuilder allows you to create a form with custom fields to get the exact information you need. Contact Fields are separately parsed and stored based on email addresses.
            </p>
            <p>
              Contact fields consist of:
            </p>
            <ul>
              <li>Name field: A single field to collect both first and last name.</li>
              <li>Phone field: To acquire the phone number of the lead</li>
              <li>Email field: Required for identifying the lead and following up with the lead.</li>
              <li>Title field: To distinguish the role of the lead</li>
              <li>Description field: To collect a short bio of the lead.</li>
            </ul>
            <p>
              Custom fields consist of:
            </p>

            <ul>
              <li>Text field: To add general information as a string.</li>
              <li>
                File field: To collect images or product specifications. 
                You can upload the following data files - png, jpg, gif, or archive file (zip).
              </li>
              <li>
                In-page field: To collect information from the page where the inline-form.js is added. This field is typically used for ecommerce platforms where fields like the id or model of a product needs to be collected automagically.
              </li>
              <li>
                Paragraph field: To collect any descriptive information as text.
              </li>
              <li>
                Select field, radio field, checkbox field: To create multiple option choices.
              </li>
            </ul>
            <p>
              You can add custom styles in the 'Styles' tab by adding css directly into the text field. You can also divide the form by selecting the option to change the amount of columns in the form.
            </p>
            <p>
              You can add custom javascript in the 'Javascripts' tab. You can also define how the form will be rendered.
            </p>
            <p>
              Under the settings tab, you can define the emails that will receive a notification email when a form submission is made along with designing the template of the autoresponder.
            </p>
          </div>

          <div class="tab-pane fade" id="style">
            <p>Custom style CSS: </p>
            <%= f.text_area :styles, class: 'form-control full', placeholder: 'Add your custom styles' %>
            <div class='clearfix'></div>
            <p>Number of columns: </p>
            <div class='clearfix'></div>
            <div class="radio">
              <%= f.label :column_style_1 do %>
                <%= f.radio_button :column_style, '1', :checked => true %> 
                One Column
              <% end %>
            </div>
            <div class="radio">
              <%= f.label :column_style_2 do %>
                <%= f.radio_button :column_style, '2' %> 
                Two Columns
              <% end %>
            </div>
          </div>

          <div class="tab-pane fade" id="js">
            <p>Custom Javscript: </p>
            <%= f.text_area :scripts, class: 'form-control full', placeholder: 'Add your custom scripts' %>
            <hr>
            <p>Choose an option to render this form:</p>
            <div class="radio">
              <%= label_tag :trigger_method_Button do %>
                <%= radio_button_tag :trigger_method, 'Button', @form.trigger_method != 'Widget' && @form.trigger_method != 'PageLoad' %> 
                Triggered By Button
              <% end %>
            </div>
            <div class="radio">
              <%= label_tag :trigger_method_PageLoad do %>
                <%= radio_button_tag :trigger_method, 'PageLoad', @form.trigger_method == 'PageLoad' %> 
                Render On Page Load
              <% end %>
            </div>
            <div class="radio">
              <%= label_tag :trigger_method_Widget do %>
                <%= radio_button_tag :trigger_method, 'Widget', @form.trigger_method == 'Widget' %> 
                  Triggered By Widget
              <% end %>
            </div>
            <div class='trigger-methods secondary-block'> 
              <p>ID / Class of button to trigger form: </p>
              <%= f.text_field :trigger_method, :class => 'form-control', :placeholder => 'Enter ID / class of button' %>
            </div> 
            <hr>
            <div class='wrapper'> 
              <p>ID / Class of button want to rename: </p>
              <%= f.text_field :wrapper, :class => 'form-control', :placeholder => 'Enter ID / class of button' %>
            </div> 
            <div class='wrapper-content secondary-block'> 
              <p>New html for wrapper: </p>
              <%= f.text_area :wrapper_content, class: 'form-control full', placeholder: 'Add your new content for trigger button' %>
            </div> 
          </div>

          <div class="tab-pane fade" id="settings">
            <div class='clearfix'>
              <p>Add emails to be notified when this form is submitted: </p>
              <%= form_custom_settings(@form.emails, "email", f)%>
            </div>
            <div class='clearfix thank-you-message'>
              <p>Deisign the content of the thank you message autoresponder: </p>
              <%= f.text_area :thank_msg, :class => 'form-control full', :placeholder => 'Enter your thank you message' %>
              <p class='note'>
                <strong class='red'>NOTE*: </strong> 
              </p>
              <p>
                - We use the liquid templating method to design the template.
              </p>
              <p>
                - You can use the 'customer' variable to get your customer's email, name, phone, title, or description. 
              </p>
              <p class='more-info'>
                <span>
                  Never heard about liquid template? You can learn more
                </span>
                <a href='http://liquidmarkup.org' target='_blank'>here</a> 
                <span>.</span>
              </p>
            </div>

            <hr>

            <div class='clearfix '>
              <p>Add the url of the location you want to send the user after successful submission: </p>
              <%= f.text_field :redirect_link, class: 'form-control full', placeholder: 'Enter your redirect link' %>
            </div>
          </div>
        </div>
      </div>
    </div>

    <div class="actions clearfix">
      <%= f.submit class: "btn btn-success" %>
    </div>
  </div>

  <div class="col-lg-2 col-md-2 col-sm-12 col-xs-12 settings">
    <div class="main-box">
      <h2>Field Properties</h2>
      <div class='clearfix'></div>
      <ul class='list-unstyled'>
        <li class='hidden'>
          <label>Field label: </label>
          <div class='clearfix'></div>
          <input id='option_label' data-name='label' class='form-control' type='text'>
        </li>
        <li class='hidden'>
          <label>CSS Class: </label>
          <div class='clearfix'></div>
          <input id='option_css_class' data-name='css_class' class='form-control' type='text'>
        </li>
        <li class='hidden'>
          <label>Placeholder: </label>
          <div class='clearfix'></div>
          <input id='option_placeholder' data-name='placeholder' class='form-control' type='text'>
        </li>
        <li class='hidden'>
          <label>Description: </label>
          <div class='clearfix'></div>
          <input id='option_description' data-name='description' class='form-control' type='text'>
        </li>
        <li class='hidden inpage'>
          <label>Product variant option, id, class: </label>
          <div class='clearfix'></div>
          <input id='option_id_class' data-name='id_class' class='form-control' type='text'>
        </li>
        <li class='hidden'>
          <input id="option_required" data-name='required' class='form-control' type="checkbox" value="0">
          <label>Required? </label>
        </li>
        <li class='hidden multi-options'>
          <label>Options: </label>
          <div class='clearfix'></div>
          <div class="option-field">  
            <div class="field">
              <label class="sr-only" for="form_options__name">Name</label>
              <input class="form-control" id="form_options__name" name="form[options][][name]" placeholder="option name" type="text">
              <a class="remove_options" href="#">
                <i class="fa fa-minus-circle"></i>
              </a>
            </div>
          </div>
          <%= link_to_add_options "option", f, :options %><br>
        </li>
        <li class='hidden rich-content'>
          <label>Content: </label>
          <div class='clearfix'></div>
          <textarea id='option_content' name="content"></textarea>
        </li>
      </div>
  </div>

  <div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">

        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title" id="myModalLabel">Confirm Delete</h4>
        </div>

        <div class="modal-body">
          <p>Do you want to delete this form field?</p>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
          <a href="#" class="btn btn-danger danger yes">Delete</a>
        </div>
      </div>
    </div>
  </div>

<% end %>

